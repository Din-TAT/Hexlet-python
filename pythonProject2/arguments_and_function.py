#Реализуйте функцию truncate(), которая должна обрезать переданную строку до указанного количества символов, добавлять в конце многоточие и возвращать получившуюся строку. Сама строка и число — количество символов, передаются в функцию в качестве параметров при вызове
#
#Подобная логика часто используется на сайтах, чтобы отобразить длинный текст в сокращенном виде.
#
#Функция принимает два параметра:
#
#Строка, которую нужно обрезать
#Число символов, которые нужно оставить
#Пример того, как должна работать написанная вами функция:
#
## Передаём текст напрямую
## Обрезаем текст, оставляя 2 символа
#truncate('hexlet', 2)  # he...
#
# Через переменную
#text = 'it works!'
# Обрезаем текст, оставляя 4 символа
#truncate(text, 4)  # it w...
#Подсказки
#Эта функция отсутствует в стандартной библиотеке, необходимо реализовать ее самостоятельно
#Реализовать эту функцию можно различными способами, подскажем лишь один из них. Для решения этим способом вам нужно взять подстроку из строки, переданной первым параметром в функцию. Используйте для этого срезы строк. Исходя из условия задания, подумайте, с какого индекса и по какой вам надо извлечь подстроку.
#word = 'welcome!'
# Передавать границы среза можно через переменные
#index = 3
#word[:index] # wel
# точки зрения проверочной системы не имеет значения, каким из способов будет реализована функция truncate() внутри. Главное – чтобы она выполняла поставленную задачу
from operator import index


def truncate(text,length):
    index = length
    length= text[:index] + '...'
    print(length)
    return length
truncate('text',3)










